@model GYMProject.Models.SessionViewModel

@{
    ViewBag.Title = "Sessions";
}

<h2>Sessions</h2>

<div class="row">
    <div class="col-md-8">
        <h3>Session List</h3>
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Sessions.First().HeureDebut)</th>
                    <th>@Html.DisplayNameFor(model => model.Sessions.First().HeureFin)</th>
                    <th>@Html.DisplayNameFor(model => model.Sessions.First().SessionType)</th>
                    <th>Coach</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Sessions)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.HeureDebut)</td>
                        <td>@Html.DisplayFor(modelItem => item.HeureFin)</td>
                        <td>@Html.DisplayFor(modelItem => item.SessionType)</td>
                        <td>@Html.DisplayFor(modelItem => item.Staff.Nom) @Html.DisplayFor(modelItem => item.Staff.Prenom)</td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-primary btn-sm" }) |
                            @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info btn-sm" }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger btn-sm", onclick = "return confirm('Are you sure you want to delete this session?');" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-md-4">
        <h3>Create New Session</h3>
        @using (Html.BeginForm("Add", "Session", FormMethod.Post, new { id = "createForm" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.LabelFor(model => model.NewSession.HeureDebut)
                @Html.TextBoxFor(model => model.NewSession.HeureDebut, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NewSession.HeureFin)
                @Html.TextBoxFor(model => model.NewSession.HeureFin, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NewSession.SessionType)
                @Html.DropDownListFor(model => model.NewSession.SessionType, Model.SessionTypes, "Select a session type", new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NewSession.StaffId, "Coach")
                @Html.DropDownListFor(model => model.NewSession.StaffId, Model.Coaches, "Select a coach", new { @class = "form-control" })
            </div>
            <button type="submit" class="btn btn-success">Create</button>
        }
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#createForm').submit(function (event) {
            event.preventDefault();
            var $form = $(this);
            $.ajax({
                type: $form.attr('method'),
                url: $form.attr('action'),
                data: $form.serialize(),
                success: function (response) {
                    if (response.success) {
                        alert('Session created successfully!');
                        location.reload();
                    } else {
                        alert('Error: ' + response.errors.join(', '));
                    }
                }
            });
        });
    });
</script>
